plugins {
    id 'java'
}

group 'net.cyllene.hackerrank'
version '0.1.0'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

test {
    useJUnitPlatform()
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.6.0'
    testImplementation 'org.assertj:assertj-core:3.15.0'
    testImplementation 'org.mockito:mockito-core:3.2.4'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.0'
    implementation 'org.apache.commons:commons-lang3:3.9'
    implementation 'org.apache.httpcomponents:httpclient:4.5.11'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.10.2'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.10.2'
    implementation 'commons-cli:commons-cli:1.4'
}

task jarComplete(type: Jar, dependsOn: jar) {
    description = 'Assembles a jar archive containing the main classes and dependencies.'
    group = 'build'

    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    } {
        // META-INF copies of dependencies would overwrite each other
        exclude 'META-INF/'
    }

    manifest {
        attributes 'Main-Class': 'net.cyllene.hackerrank.downloader.HackerrankDownloader',
                'Built-Date': new Date(),
                'Built-JDK': System.getProperty('java.version')
    }

    with jar
}

/*
 * Copyright 2016-2020 Mikhail Antonov
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Workaround for Windows
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
test { systemProperty "file.encoding", "utf-8" }